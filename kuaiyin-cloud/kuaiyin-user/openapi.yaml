# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /kuaiyin/user:
        get:
            tags:
                - UserService
            operationId: UserService_UserInfo
            parameters:
                - name: UserId
                  in: query
                  description: '@gotags: json:"user_id"'
                  schema:
                    type: string
                - name: Token
                  in: query
                  description: '@gotags: json:"token"'
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.KuaiyinUserResponse'
    /kuaiyin/user/login:
        post:
            tags:
                - UserService
            operationId: UserService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.KuaiyinUserLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.KuaiyinUserLoginResponse'
    /kuaiyin/user/register:
        post:
            tags:
                - UserService
            operationId: UserService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.KuaiyinUserRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.KuaiyinUserRegisterResponse'
components:
    schemas:
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.KuaiyinUserLoginRequest:
            type: object
            properties:
                Username:
                    type: string
                    description: '@gotags: json:"username"'
                Password:
                    type: string
                    description: '@gotags: json:"password"'
        user.v1.KuaiyinUserLoginResponse:
            type: object
            properties:
                StatusCode:
                    type: integer
                    description: '@gotags: json:"status_code"'
                    format: int32
                StatusMsg:
                    type: string
                    description: '@gotags: json:"status_msg"'
                UserId:
                    type: string
                    description: '@gotags: json:"user_id"'
                Token:
                    type: string
                    description: '@gotags: json:"token"'
        user.v1.KuaiyinUserRegisterRequest:
            type: object
            properties:
                Username:
                    type: string
                    description: '@gotags: json:"username"'
                Password:
                    type: string
                    description: '@gotags: json:"password"'
        user.v1.KuaiyinUserRegisterResponse:
            type: object
            properties:
                StatusCode:
                    type: integer
                    description: '@gotags: json:"status_code"'
                    format: int32
                StatusMsg:
                    type: string
                    description: '@gotags: json:"status_msg"'
                UserId:
                    type: string
                    description: '@gotags: json:"user_id"'
                Token:
                    type: string
                    description: '@gotags: json:"token"'
        user.v1.KuaiyinUserResponse:
            type: object
            properties:
                StatusCode:
                    type: integer
                    description: '@gotags: json:"status_code"'
                    format: int32
                StatusMsg:
                    type: string
                    description: '@gotags: json:"status_msg"'
                User:
                    allOf:
                        - $ref: '#/components/schemas/user.v1.User'
                    description: '@gotags: json:"user"'
        user.v1.User:
            type: object
            properties:
                Id:
                    type: string
                    description: '@gotags: json:"id"'
                Name:
                    type: string
                    description: '@gotags: json:"name"'
                FollowCount:
                    type: string
                    description: '@gotags: json:"follow_count"'
                FollowerCount:
                    type: string
                    description: '@gotags: json:"follower_count"'
                IsFollow:
                    type: boolean
                    description: '@gotags: json:"is_follow"'
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: UserService
